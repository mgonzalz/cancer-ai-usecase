# ============================================
# Augmentation profiles configuration file
# This file defines different image preprocessing and
# augmentation strategies (profiles) used during training.
# Each profile specifies how images are transformed before being fed into the model.
# ============================================

profiles:                          # Collection of available augmentation profiles

  rgb_base:                        # Basic RGB profile (minimal preprocessing)
    hair_removal: true             # Always perform hair removal
    vignette_mask: true            # Vignette masking to reduce border artifacts
    color_space: "RGB"             # Use standard RGB color space
    augment_level: "light"         # Light level of augmentation (minor variations)
    segment: true                  # Segment for lesion-preserved augmentation
    save_npy4: false               # No .npy [H,W,4] (RGB) output

  rgb_h:                           # RGB + Hue profile (adds color variation and cleaning)
    hair_removal: true             # Always perform hair removal
    vignette_mask: true            # Vignette masking to reduce border artifacts
    color_space: "RGB+H"           # RGB color space with Hue component enhancement
    augment_level: "light"         # Light level of augmentation (minor variations)
    segment: true                  # Segment for lesion-preserved augmentation
    save_npy4: true                # Load .npy [H,W,4] (RGB+H)

  rgb_s:                           # RGB + Saturation profile (adds color variation and cleaning)
    hair_removal: true             # Always perform hair removal
    vignette_mask: true            # Vignette masking to reduce border artifacts
    color_space: "RGB+S"           # RGB color space with Saturation component enhancement
    augment_level: "light"         # Light level of augmentation (minor variations)
    segment: true                  # Segment for lesion-preserved augmentation
    save_npy4: true                # Load .npy [H,W,4] (RGB+S)
